--- src/sna/sna_cpu.c.orig	2014-05-28 14:38:16.000000000 +0200
+++ src/sna/sna_cpu.c	2014-07-24 21:09:43.000000000 +0200
@@ -41,6 +41,7 @@
 {
 	unsigned max = __get_cpuid_max(BASIC_CPUID, NULL);
 	unsigned eax, ebx, ecx, edx;
+	eax = ebx = ecx = edx = 0;
 	unsigned features = 0;
 	unsigned extra = 0;
 
--- src/sna/sna_damage.c.orig	2013-08-14 12:06:26.381036854 +0200
+++ src/sna/sna_damage.c	2013-08-14 12:07:23.684023065 +0200
@@ -410,7 +410,7 @@
 	int n, nboxes;
 	BoxPtr boxes, free_boxes = NULL;
 	pixman_region16_t *region = &damage->region;
-	struct sna_damage_box *iter;
+	struct sna_damage_box *iter = NULL;
 
 	assert(damage->mode != DAMAGE_ALL);
 	assert(damage->dirty);
@@ -1709,7 +1709,7 @@
 {
 	int n, nboxes;
 	BoxPtr boxes;
-	struct sna_damage_box *iter;
+	struct sna_damage_box *iter = NULL;
 
 	RegionCopy(r, &damage->region);
 	if (!damage->dirty)
--- src/uxa/intel_batchbuffer.c.orig	2013-08-14 12:08:14.323028320 +0200
+++ src/uxa/intel_batchbuffer.c	2013-08-14 12:08:37.202016923 +0200
@@ -141,7 +141,7 @@
 static void intel_batch_do_flush(ScrnInfoPtr scrn)
 {
 	intel_screen_private *intel = intel_get_screen_private(scrn);
-	struct intel_pixmap *priv;
+	struct intel_pixmap *priv = NULL;
 
 	list_for_each_entry(priv, &intel->batch_pixmaps, batch)
 		priv->dirty = 0;
