--- configure.orig	2014-02-22 02:24:12.000000000 +0100
+++ configure	2014-02-23 22:15:04.000000000 +0100
@@ -848,6 +848,8 @@
 XLIBGL_CFLAGS
 LIBUDEV_LIBS
 LIBUDEV_CFLAGS
+LIBDEVQ_LIBS
+LIBDEVQ_CFLAGS
 LIBDRM_LIBS
 LIBDRM_CFLAGS
 MESA_LLVM
@@ -1127,6 +1129,8 @@
 PKG_CONFIG_LIBDIR
 LIBDRM_CFLAGS
 LIBDRM_LIBS
+LIBDEVQ_CFLAGS
+LIBDEVQ_LIBS
 LIBUDEV_CFLAGS
 LIBUDEV_LIBS
 XLIBGL_CFLAGS
@@ -1918,6 +1922,10 @@
   LIBDRM_CFLAGS
               C compiler flags for LIBDRM, overriding pkg-config
   LIBDRM_LIBS linker flags for LIBDRM, overriding pkg-config
+  LIBDEVQ_CFLAGS
+              C compiler flags for LIBDEVQ, overriding pkg-config
+  LIBDEVQ_LIBS
+              linker flags for LIBDEVQ, overriding pkg-config
   LIBUDEV_CFLAGS
               C compiler flags for LIBUDEV, overriding pkg-config
   LIBUDEV_LIBS
@@ -19164,6 +19172,81 @@
 	DEFINES="$DEFINES -DHAVE_LIBDRM"
 fi
 
+case "$host_os" in
+*freebsd*)
+
+pkg_failed=no
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for LIBDEVQ" >&5
+$as_echo_n "checking for LIBDEVQ... " >&6; }
+
+if test -n "$LIBDEVQ_CFLAGS"; then
+    pkg_cv_LIBDEVQ_CFLAGS="$LIBDEVQ_CFLAGS"
+ elif test -n "$PKG_CONFIG"; then
+    if test -n "$PKG_CONFIG" && \
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libdevq-1.0\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "libdevq-1.0") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then
+  pkg_cv_LIBDEVQ_CFLAGS=`$PKG_CONFIG --cflags "libdevq-1.0" 2>/dev/null`
+		      test "x$?" != "x0" && pkg_failed=yes
+else
+  pkg_failed=yes
+fi
+ else
+    pkg_failed=untried
+fi
+if test -n "$LIBDEVQ_LIBS"; then
+    pkg_cv_LIBDEVQ_LIBS="$LIBDEVQ_LIBS"
+ elif test -n "$PKG_CONFIG"; then
+    if test -n "$PKG_CONFIG" && \
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libdevq-1.0\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "libdevq-1.0") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then
+  pkg_cv_LIBDEVQ_LIBS=`$PKG_CONFIG --libs "libdevq-1.0" 2>/dev/null`
+		      test "x$?" != "x0" && pkg_failed=yes
+else
+  pkg_failed=yes
+fi
+ else
+    pkg_failed=untried
+fi
+
+
+
+if test $pkg_failed = yes; then
+   	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+
+if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
+        _pkg_short_errors_supported=yes
+else
+        _pkg_short_errors_supported=no
+fi
+        if test $_pkg_short_errors_supported = yes; then
+	        LIBDEVQ_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "libdevq-1.0" 2>&1`
+        else
+	        LIBDEVQ_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "libdevq-1.0" 2>&1`
+        fi
+	# Put the nasty error message in config.log where it belongs
+	echo "$LIBDEVQ_PKG_ERRORS" >&5
+
+	have_libdevq=no
+elif test $pkg_failed = untried; then
+     	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+	have_libdevq=no
+else
+	LIBDEVQ_CFLAGS=$pkg_cv_LIBDEVQ_CFLAGS
+	LIBDEVQ_LIBS=$pkg_cv_LIBDEVQ_LIBS
+        { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+	have_libdevq=yes
+fi
+    ;;
+*)
 
 pkg_failed=no
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for LIBUDEV" >&5
@@ -19235,6 +19318,8 @@
 $as_echo "yes" >&6; }
 	have_libudev=yes
 fi
+    ;;
+esac
 
 if test "x$enable_dri" = xyes; then
     # DRI must be shared, I think
@@ -19557,9 +19642,18 @@
 fi
         GL_PC_REQ_PRIV="$GL_PC_REQ_PRIV libdrm >= $LIBDRM_REQUIRED"
         if test x"$enable_dri3" = xyes; then
-            if test x"$have_libudev" != xyes; then
-              as_fn_error $? "DRI3 requires libudev >= $LIBUDEV_REQUIRED" "$LINENO" 5
-            fi
+            case "$host_os" in
+            *freebsd*)
+                if test x"$have_libdevq" != xyes; then
+                  as_fn_error $? "DRI3 requires libdevq" "$LINENO" 5
+                fi
+                ;;
+            *)
+                if test x"$have_libudev" != xyes; then
+                  as_fn_error $? "DRI3 requires libudev >= $LIBUDEV_REQUIRED" "$LINENO" 5
+                fi
+                ;;
+            esac
 
 pkg_failed=no
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for DRI3PROTO" >&5
@@ -19937,6 +20031,9 @@
 if test "$have_libudev" = yes; then
     DEFINES="$DEFINES -DHAVE_LIBUDEV"
 fi
+if test "$have_libdevq" = yes; then
+    DEFINES="$DEFINES -DHAVE_LIBDEVQ"
+fi
 
 # This is outside the case (above) so that it is invoked even for non-GLX
 # builds.
@@ -20608,9 +20705,18 @@
     esac
 fi
 if test "x$enable_gbm" = xyes; then
-    if test x"$have_libudev" != xyes; then
-        as_fn_error $? "gbm needs udev" "$LINENO" 5
-    fi
+    case "$host_os" in
+    *freebsd*)
+	if test x"$have_libdevq" != xyes; then
+	    as_fn_error $? "gbm needs libdevq" "$LINENO" 5
+	fi
+        ;;
+    *)
+	if test x"$have_libudev" != xyes; then
+	    as_fn_error $? "gbm needs udev" "$LINENO" 5
+	fi
+        ;;
+    esac
 
     if test "x$enable_dri" = xyes; then
         GBM_BACKEND_DIRS="$GBM_BACKEND_DIRS dri"
@@ -20627,7 +20733,14 @@
   HAVE_GBM_FALSE=
 fi
 
-GBM_PC_REQ_PRIV="libudev"
+case "$host_os" in
+*freebsd*)
+    GBM_PC_REQ_PRIV="libdevq-1.0"
+    ;;
+*)
+    GBM_PC_REQ_PRIV="libudev"
+    ;;
+esac
 GBM_PC_LIB_PRIV="$DLOPEN_LIBS"
 
 
@@ -21378,9 +21491,19 @@
 		;;
 	esac
 
-        case "$plat$have_libudev" in
-                waylandno|drmno)
-                    as_fn_error $? "cannot build $plat platfrom without udev" "$LINENO" 5 ;;
+        case "$host_os" in
+        *freebsd*)
+            case "$plat$have_libdevq" in
+                    waylandno|drmno)
+                        as_fn_error $? "cannot build $plat platfrom without libdevq" "$LINENO" 5 ;;
+            esac
+            ;;
+        *)
+            case "$plat$have_libudev" in
+                    waylandno|drmno)
+                        as_fn_error $? "cannot build $plat platfrom without udev" "$LINENO" 5 ;;
+            esac
+            ;;
         esac
 done
 
@@ -21896,6 +22019,81 @@
 
 gallium_require_drm_loader() {
     if test "x$enable_gallium_loader" = xyes; then
+        case "$host_os" in
+        *freebsd*)
+
+pkg_failed=no
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for LIBDEVQ" >&5
+$as_echo_n "checking for LIBDEVQ... " >&6; }
+
+if test -n "$LIBDEVQ_CFLAGS"; then
+    pkg_cv_LIBDEVQ_CFLAGS="$LIBDEVQ_CFLAGS"
+ elif test -n "$PKG_CONFIG"; then
+    if test -n "$PKG_CONFIG" && \
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libdevq-1.0\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "libdevq-1.0") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then
+  pkg_cv_LIBDEVQ_CFLAGS=`$PKG_CONFIG --cflags "libdevq-1.0" 2>/dev/null`
+		      test "x$?" != "x0" && pkg_failed=yes
+else
+  pkg_failed=yes
+fi
+ else
+    pkg_failed=untried
+fi
+if test -n "$LIBDEVQ_LIBS"; then
+    pkg_cv_LIBDEVQ_LIBS="$LIBDEVQ_LIBS"
+ elif test -n "$PKG_CONFIG"; then
+    if test -n "$PKG_CONFIG" && \
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libdevq-1.0\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "libdevq-1.0") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then
+  pkg_cv_LIBDEVQ_LIBS=`$PKG_CONFIG --libs "libdevq-1.0" 2>/dev/null`
+		      test "x$?" != "x0" && pkg_failed=yes
+else
+  pkg_failed=yes
+fi
+ else
+    pkg_failed=untried
+fi
+
+
+
+if test $pkg_failed = yes; then
+   	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+
+if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
+        _pkg_short_errors_supported=yes
+else
+        _pkg_short_errors_supported=no
+fi
+        if test $_pkg_short_errors_supported = yes; then
+	        LIBDEVQ_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "libdevq-1.0" 2>&1`
+        else
+	        LIBDEVQ_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "libdevq-1.0" 2>&1`
+        fi
+	# Put the nasty error message in config.log where it belongs
+	echo "$LIBDEVQ_PKG_ERRORS" >&5
+
+	as_fn_error $? "Gallium drm loader requires libdevq" "$LINENO" 5
+elif test $pkg_failed = untried; then
+     	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+	as_fn_error $? "Gallium drm loader requires libdevq" "$LINENO" 5
+else
+	LIBDEVQ_CFLAGS=$pkg_cv_LIBDEVQ_CFLAGS
+	LIBDEVQ_LIBS=$pkg_cv_LIBDEVQ_LIBS
+        { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+
+fi
+            ;;
+        *)
 
 pkg_failed=no
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for LIBUDEV" >&5
@@ -21967,6 +22165,8 @@
 $as_echo "yes" >&6; }
 
 fi
+            ;;
+        esac
         if test "x$have_libdrm" != xyes; then
             as_fn_error $? "Gallium drm loader requires libdrm >= $LIBDRM_REQUIRED" "$LINENO" 5
         fi
