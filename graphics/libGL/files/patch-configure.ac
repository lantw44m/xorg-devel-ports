--- configure.ac.orig	2014-02-27 02:56:39.000000000 +0100
+++ configure.ac	2014-03-13 22:02:20.000000000 +0100
@@ -771,8 +771,16 @@
 	DEFINES="$DEFINES -DHAVE_LIBDRM"
 fi
 
-PKG_CHECK_MODULES([LIBUDEV], [libudev >= $LIBUDEV_REQUIRED],
-                  have_libudev=yes, have_libudev=no)
+case "$host_os" in
+*freebsd*)
+    PKG_CHECK_MODULES([LIBDEVQ], [libdevq-1.0],
+		      have_libdevq=yes, have_libdevq=no)
+    ;;
+*)
+    PKG_CHECK_MODULES([LIBUDEV], [libudev >= $LIBUDEV_REQUIRED],
+		      have_libudev=yes, have_libudev=no)
+    ;;
+esac
 
 if test "x$enable_dri" = xyes; then
     # DRI must be shared, I think
@@ -830,9 +838,18 @@
         PKG_CHECK_MODULES([DRI2PROTO], [dri2proto >= $DRI2PROTO_REQUIRED])
         GL_PC_REQ_PRIV="$GL_PC_REQ_PRIV libdrm >= $LIBDRM_REQUIRED"
         if test x"$enable_dri3" = xyes; then
-            if test x"$have_libudev" != xyes; then
-              AC_MSG_ERROR([DRI3 requires libudev >= $LIBUDEV_REQUIRED])
-            fi
+            case "$host_os" in
+            *freebsd*)
+                if test x"$have_libdevq" != xyes; then
+                  AC_MSG_ERROR([DRI3 requires libdevq])
+                fi
+                ;;
+            *)
+                if test x"$have_libudev" != xyes; then
+                  AC_MSG_ERROR([DRI3 requires libudev >= $LIBUDEV_REQUIRED])
+                fi
+                ;;
+            esac
             PKG_CHECK_MODULES([DRI3PROTO], [dri3proto >= $DRI3PROTO_REQUIRED])
             PKG_CHECK_MODULES([PRESENTPROTO], [presentproto >= $PRESENTPROTO_REQUIRED])
         fi
@@ -870,6 +887,9 @@
 if test "$have_libudev" = yes; then
     DEFINES="$DEFINES -DHAVE_LIBUDEV"
 fi
+if test "$have_libdevq" = yes; then
+    DEFINES="$DEFINES -DHAVE_LIBDEVQ"
+fi
 
 # This is outside the case (above) so that it is invoked even for non-GLX
 # builds.
@@ -1178,9 +1198,18 @@
     esac
 fi
 if test "x$enable_gbm" = xyes; then
-    if test x"$have_libudev" != xyes; then
-        AC_MSG_ERROR([gbm needs udev])
-    fi
+    case "$host_os" in
+    *freebsd*)
+	if test x"$have_libdevq" != xyes; then
+	    AC_MSG_ERROR([gbm needs libdevq])
+	fi
+        ;;
+    *)
+	if test x"$have_libudev" != xyes; then
+	    AC_MSG_ERROR([gbm needs udev])
+	fi
+        ;;
+    esac
 
     if test "x$enable_dri" = xyes; then
         GBM_BACKEND_DIRS="$GBM_BACKEND_DIRS dri"
@@ -1190,7 +1219,14 @@
     fi
 fi
 AM_CONDITIONAL(HAVE_GBM, test "x$enable_gbm" = xyes)
-GBM_PC_REQ_PRIV="libudev"
+case "$host_os" in
+*freebsd*)
+    GBM_PC_REQ_PRIV="libdevq-1.0"
+    ;;
+*)
+    GBM_PC_REQ_PRIV="libudev"
+    ;;
+esac
 GBM_PC_LIB_PRIV="$DLOPEN_LIBS"
 AC_SUBST([GBM_PC_REQ_PRIV])
 AC_SUBST([GBM_PC_LIB_PRIV])
@@ -1461,9 +1497,19 @@
 		;;
 	esac
 
-        case "$plat$have_libudev" in
-                waylandno|drmno)
-                    AC_MSG_ERROR([cannot build $plat platfrom without udev]) ;;
+        case "$host_os" in
+        *freebsd*)
+            case "$plat$have_libdevq" in
+                    waylandno|drmno)
+                        AC_MSG_ERROR([cannot build $plat platfrom without libdevq]) ;;
+            esac
+            ;;
+        *)
+            case "$plat$have_libudev" in
+                    waylandno|drmno)
+                        AC_MSG_ERROR([cannot build $plat platfrom without udev]) ;;
+            esac
+            ;;
         esac
 done
 
@@ -1619,8 +1665,6 @@
                 CLANG_LIBDIR=${LLVM_LIBDIR}
             fi
             CLANG_RESOURCE_DIR=$CLANG_LIBDIR/clang/${LLVM_VERSION}
-            AS_IF([test ! -f "$CLANG_RESOURCE_DIR/include/stddef.h"],
-                [AC_MSG_ERROR([Could not find clang internal header stddef.h in $CLANG_RESOURCE_DIR Use --with-clang-libdir to specify the correct path to the clang libraries.])])
         fi
     else
         MESA_LLVM=0
@@ -1702,8 +1746,16 @@
 
 gallium_require_drm_loader() {
     if test "x$enable_gallium_loader" = xyes; then
-        PKG_CHECK_MODULES([LIBUDEV], [libudev], [],
-                          AC_MSG_ERROR([Gallium drm loader requires libudev]))
+        case "$host_os" in
+        *freebsd*)
+            PKG_CHECK_MODULES([LIBDEVQ], [libdevq-1.0], [],
+                              AC_MSG_ERROR([Gallium drm loader requires libdevq]))
+            ;;
+        *)
+            PKG_CHECK_MODULES([LIBUDEV], [libudev], [],
+                              AC_MSG_ERROR([Gallium drm loader requires libudev]))
+            ;;
+        esac
         if test "x$have_libdrm" != xyes; then
             AC_MSG_ERROR([Gallium drm loader requires libdrm >= $LIBDRM_REQUIRED])
         fi
