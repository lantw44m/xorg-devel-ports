--- tests/Makefile.in.orig	2013-08-20 11:31:08.000000000 +0200
+++ tests/Makefile.in	2013-08-20 11:31:26.000000000 +0200
@@ -1,7 +1,7 @@
-# Makefile.in generated by automake 1.13.1 from Makefile.am.
+# Makefile.in generated by automake 1.14 from Makefile.am.
 # @configure_input@
 
-# Copyright (C) 1994-2012 Free Software Foundation, Inc.
+# Copyright (C) 1994-2013 Free Software Foundation, Inc.
 
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -15,23 +15,51 @@
 @SET_MAKE@
 
 VPATH = @srcdir@
-am__make_dryrun = \
-  { \
-    am__dry=no; \
+am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
+am__make_running_with_option = \
+  case $${target_option-} in \
+      ?) ;; \
+      *) echo "am__make_running_with_option: internal error: invalid" \
+              "target option '$${target_option-}' specified" >&2; \
+         exit 1;; \
+  esac; \
+  has_opt=no; \
+  sane_makeflags=$$MAKEFLAGS; \
+  if $(am__is_gnu_make); then \
+    sane_makeflags=$$MFLAGS; \
+  else \
     case $$MAKEFLAGS in \
       *\\[\ \	]*) \
-        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
-          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
-      *) \
-        for am__flg in $$MAKEFLAGS; do \
-          case $$am__flg in \
-            *=*|--*) ;; \
-            *n*) am__dry=yes; break;; \
-          esac; \
-        done;; \
+        bs=\\; \
+        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
+          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
     esac; \
-    test $$am__dry = yes; \
-  }
+  fi; \
+  skip_next=no; \
+  strip_trailopt () \
+  { \
+    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
+  }; \
+  for flg in $$sane_makeflags; do \
+    test $$skip_next = yes && { skip_next=no; continue; }; \
+    case $$flg in \
+      *=*|--*) continue;; \
+        -*I) strip_trailopt 'I'; skip_next=yes;; \
+      -*I?*) strip_trailopt 'I';; \
+        -*O) strip_trailopt 'O'; skip_next=yes;; \
+      -*O?*) strip_trailopt 'O';; \
+        -*l) strip_trailopt 'l'; skip_next=yes;; \
+      -*l?*) strip_trailopt 'l';; \
+      -[dEDm]) skip_next=yes;; \
+      -[JT]) skip_next=yes;; \
+    esac; \
+    case $$flg in \
+      *$$target_option*) has_opt=yes; break;; \
+    esac; \
+  done; \
+  test $$has_opt = yes
+am__make_dryrun = (target_option=n; $(am__make_running_with_option))
+am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
 pkgdatadir = $(datadir)/@PACKAGE@
 pkgincludedir = $(includedir)/@PACKAGE@
 pkglibdir = $(libdir)/@PACKAGE@
@@ -84,7 +112,8 @@
 am__DEPENDENCIES_1 =
 array_test_DEPENDENCIES = $(top_builddir)/src/libwayland-util.la \
 	$(top_builddir)/src/libwayland-client.la \
-	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1)
+	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1) \
+	$(am__DEPENDENCIES_1)
 AM_V_lt = $(am__v_lt_@AM_V@)
 am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
 am__v_lt_0 = --silent
@@ -94,27 +123,31 @@
 client_test_LDADD = $(LDADD)
 client_test_DEPENDENCIES = $(top_builddir)/src/libwayland-util.la \
 	$(top_builddir)/src/libwayland-client.la \
-	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1)
+	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1) \
+	$(am__DEPENDENCIES_1)
 am_connection_test_OBJECTS = connection-test.$(OBJEXT) \
 	$(am__objects_1)
 connection_test_OBJECTS = $(am_connection_test_OBJECTS)
 connection_test_LDADD = $(LDADD)
 connection_test_DEPENDENCIES = $(top_builddir)/src/libwayland-util.la \
 	$(top_builddir)/src/libwayland-client.la \
-	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1)
+	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1) \
+	$(am__DEPENDENCIES_1)
 am_display_test_OBJECTS = display-test.$(OBJEXT) $(am__objects_1)
 display_test_OBJECTS = $(am_display_test_OBJECTS)
 display_test_LDADD = $(LDADD)
 display_test_DEPENDENCIES = $(top_builddir)/src/libwayland-util.la \
 	$(top_builddir)/src/libwayland-client.la \
-	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1)
+	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1) \
+	$(am__DEPENDENCIES_1)
 am_event_loop_test_OBJECTS = event-loop-test.$(OBJEXT) \
 	$(am__objects_1)
 event_loop_test_OBJECTS = $(am_event_loop_test_OBJECTS)
 event_loop_test_LDADD = $(LDADD)
 event_loop_test_DEPENDENCIES = $(top_builddir)/src/libwayland-util.la \
 	$(top_builddir)/src/libwayland-client.la \
-	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1)
+	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1) \
+	$(am__DEPENDENCIES_1)
 am_exec_fd_leak_checker_OBJECTS = exec-fd-leak-checker.$(OBJEXT) \
 	test-helpers.$(OBJEXT)
 exec_fd_leak_checker_OBJECTS = $(am_exec_fd_leak_checker_OBJECTS)
@@ -124,25 +157,29 @@
 fixed_benchmark_LDADD = $(LDADD)
 fixed_benchmark_DEPENDENCIES = $(top_builddir)/src/libwayland-util.la \
 	$(top_builddir)/src/libwayland-client.la \
-	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1)
+	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1) \
+	$(am__DEPENDENCIES_1)
 am_fixed_test_OBJECTS = fixed-test.$(OBJEXT) $(am__objects_1)
 fixed_test_OBJECTS = $(am_fixed_test_OBJECTS)
 fixed_test_LDADD = $(LDADD)
 fixed_test_DEPENDENCIES = $(top_builddir)/src/libwayland-util.la \
 	$(top_builddir)/src/libwayland-client.la \
-	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1)
+	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1) \
+	$(am__DEPENDENCIES_1)
 am_list_test_OBJECTS = list-test.$(OBJEXT) $(am__objects_1)
 list_test_OBJECTS = $(am_list_test_OBJECTS)
 list_test_LDADD = $(LDADD)
 list_test_DEPENDENCIES = $(top_builddir)/src/libwayland-util.la \
 	$(top_builddir)/src/libwayland-client.la \
-	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1)
+	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1) \
+	$(am__DEPENDENCIES_1)
 am_map_test_OBJECTS = map-test.$(OBJEXT) $(am__objects_1)
 map_test_OBJECTS = $(am_map_test_OBJECTS)
 map_test_LDADD = $(LDADD)
 map_test_DEPENDENCIES = $(top_builddir)/src/libwayland-util.la \
 	$(top_builddir)/src/libwayland-client.la \
-	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1)
+	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1) \
+	$(am__DEPENDENCIES_1)
 am_os_wrappers_test_OBJECTS = os-wrappers-test.$(OBJEXT) \
 	wayland-os.$(OBJEXT) $(am__objects_1)
 os_wrappers_test_OBJECTS = $(am_os_wrappers_test_OBJECTS)
@@ -150,25 +187,29 @@
 os_wrappers_test_DEPENDENCIES =  \
 	$(top_builddir)/src/libwayland-util.la \
 	$(top_builddir)/src/libwayland-client.la \
-	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1)
+	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1) \
+	$(am__DEPENDENCIES_1)
 am_queue_test_OBJECTS = queue-test.$(OBJEXT) $(am__objects_1)
 queue_test_OBJECTS = $(am_queue_test_OBJECTS)
 queue_test_LDADD = $(LDADD)
 queue_test_DEPENDENCIES = $(top_builddir)/src/libwayland-util.la \
 	$(top_builddir)/src/libwayland-client.la \
-	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1)
+	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1) \
+	$(am__DEPENDENCIES_1)
 am_sanity_test_OBJECTS = sanity-test.$(OBJEXT) $(am__objects_1)
 sanity_test_OBJECTS = $(am_sanity_test_OBJECTS)
 sanity_test_LDADD = $(LDADD)
 sanity_test_DEPENDENCIES = $(top_builddir)/src/libwayland-util.la \
 	$(top_builddir)/src/libwayland-client.la \
-	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1)
+	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1) \
+	$(am__DEPENDENCIES_1)
 am_socket_test_OBJECTS = socket-test.$(OBJEXT) $(am__objects_1)
 socket_test_OBJECTS = $(am_socket_test_OBJECTS)
 socket_test_LDADD = $(LDADD)
 socket_test_DEPENDENCIES = $(top_builddir)/src/libwayland-util.la \
 	$(top_builddir)/src/libwayland-client.la \
-	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1)
+	$(top_builddir)/src/libwayland-server.la $(am__DEPENDENCIES_1) \
+	$(am__DEPENDENCIES_1)
 AM_V_P = $(am__v_P_@AM_V@)
 am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
 am__v_P_0 = false
@@ -463,6 +504,7 @@
 DEFS = @DEFS@
 DEPDIR = @DEPDIR@
 DLLTOOL = @DLLTOOL@
+DL_LIBS = @DL_LIBS@
 DOXYGEN = @DOXYGEN@
 DSYMUTIL = @DSYMUTIL@
 DUMPBIN = @DUMPBIN@
@@ -599,7 +641,7 @@
 LDADD = $(top_builddir)/src/libwayland-util.la \
 	$(top_builddir)/src/libwayland-client.la \
 	$(top_builddir)/src/libwayland-server.la \
-	-lrt -ldl $(FFI_LIBS)
+	-lrt $(DL_LIBS) $(FFI_LIBS)
 
 exec_fd_leak_checker_SOURCES = \
 	exec-fd-leak-checker.c			\
@@ -659,45 +701,59 @@
 	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
 	echo " rm -f" $$list; \
 	rm -f $$list
+
 array-test$(EXEEXT): $(array_test_OBJECTS) $(array_test_DEPENDENCIES) $(EXTRA_array_test_DEPENDENCIES) 
 	@rm -f array-test$(EXEEXT)
 	$(AM_V_CCLD)$(LINK) $(array_test_OBJECTS) $(array_test_LDADD) $(LIBS)
+
 client-test$(EXEEXT): $(client_test_OBJECTS) $(client_test_DEPENDENCIES) $(EXTRA_client_test_DEPENDENCIES) 
 	@rm -f client-test$(EXEEXT)
 	$(AM_V_CCLD)$(LINK) $(client_test_OBJECTS) $(client_test_LDADD) $(LIBS)
+
 connection-test$(EXEEXT): $(connection_test_OBJECTS) $(connection_test_DEPENDENCIES) $(EXTRA_connection_test_DEPENDENCIES) 
 	@rm -f connection-test$(EXEEXT)
 	$(AM_V_CCLD)$(LINK) $(connection_test_OBJECTS) $(connection_test_LDADD) $(LIBS)
+
 display-test$(EXEEXT): $(display_test_OBJECTS) $(display_test_DEPENDENCIES) $(EXTRA_display_test_DEPENDENCIES) 
 	@rm -f display-test$(EXEEXT)
 	$(AM_V_CCLD)$(LINK) $(display_test_OBJECTS) $(display_test_LDADD) $(LIBS)
+
 event-loop-test$(EXEEXT): $(event_loop_test_OBJECTS) $(event_loop_test_DEPENDENCIES) $(EXTRA_event_loop_test_DEPENDENCIES) 
 	@rm -f event-loop-test$(EXEEXT)
 	$(AM_V_CCLD)$(LINK) $(event_loop_test_OBJECTS) $(event_loop_test_LDADD) $(LIBS)
+
 exec-fd-leak-checker$(EXEEXT): $(exec_fd_leak_checker_OBJECTS) $(exec_fd_leak_checker_DEPENDENCIES) $(EXTRA_exec_fd_leak_checker_DEPENDENCIES) 
 	@rm -f exec-fd-leak-checker$(EXEEXT)
 	$(AM_V_CCLD)$(LINK) $(exec_fd_leak_checker_OBJECTS) $(exec_fd_leak_checker_LDADD) $(LIBS)
+
 fixed-benchmark$(EXEEXT): $(fixed_benchmark_OBJECTS) $(fixed_benchmark_DEPENDENCIES) $(EXTRA_fixed_benchmark_DEPENDENCIES) 
 	@rm -f fixed-benchmark$(EXEEXT)
 	$(AM_V_CCLD)$(LINK) $(fixed_benchmark_OBJECTS) $(fixed_benchmark_LDADD) $(LIBS)
+
 fixed-test$(EXEEXT): $(fixed_test_OBJECTS) $(fixed_test_DEPENDENCIES) $(EXTRA_fixed_test_DEPENDENCIES) 
 	@rm -f fixed-test$(EXEEXT)
 	$(AM_V_CCLD)$(LINK) $(fixed_test_OBJECTS) $(fixed_test_LDADD) $(LIBS)
+
 list-test$(EXEEXT): $(list_test_OBJECTS) $(list_test_DEPENDENCIES) $(EXTRA_list_test_DEPENDENCIES) 
 	@rm -f list-test$(EXEEXT)
 	$(AM_V_CCLD)$(LINK) $(list_test_OBJECTS) $(list_test_LDADD) $(LIBS)
+
 map-test$(EXEEXT): $(map_test_OBJECTS) $(map_test_DEPENDENCIES) $(EXTRA_map_test_DEPENDENCIES) 
 	@rm -f map-test$(EXEEXT)
 	$(AM_V_CCLD)$(LINK) $(map_test_OBJECTS) $(map_test_LDADD) $(LIBS)
+
 os-wrappers-test$(EXEEXT): $(os_wrappers_test_OBJECTS) $(os_wrappers_test_DEPENDENCIES) $(EXTRA_os_wrappers_test_DEPENDENCIES) 
 	@rm -f os-wrappers-test$(EXEEXT)
 	$(AM_V_CCLD)$(LINK) $(os_wrappers_test_OBJECTS) $(os_wrappers_test_LDADD) $(LIBS)
+
 queue-test$(EXEEXT): $(queue_test_OBJECTS) $(queue_test_DEPENDENCIES) $(EXTRA_queue_test_DEPENDENCIES) 
 	@rm -f queue-test$(EXEEXT)
 	$(AM_V_CCLD)$(LINK) $(queue_test_OBJECTS) $(queue_test_LDADD) $(LIBS)
+
 sanity-test$(EXEEXT): $(sanity_test_OBJECTS) $(sanity_test_DEPENDENCIES) $(EXTRA_sanity_test_DEPENDENCIES) 
 	@rm -f sanity-test$(EXEEXT)
 	$(AM_V_CCLD)$(LINK) $(sanity_test_OBJECTS) $(sanity_test_LDADD) $(LIBS)
+
 socket-test$(EXEEXT): $(socket_test_OBJECTS) $(socket_test_DEPENDENCIES) $(EXTRA_socket_test_DEPENDENCIES) 
 	@rm -f socket-test$(EXEEXT)
 	$(AM_V_CCLD)$(LINK) $(socket_test_OBJECTS) $(socket_test_LDADD) $(LIBS)
@@ -731,14 +787,14 @@
 @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c $<
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<
 
 .c.obj:
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
 @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c `$(CYGPATH_W) '$<'`
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
 
 .c.lo:
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@@ -828,7 +884,7 @@
 	$(MAKE) $(AM_MAKEFLAGS) $<
 
 # Leading 'am--fnord' is there to ensure the list of targets does not
-# exand to empty, as could happen e.g. with make check TESTS=''.
+# expand to empty, as could happen e.g. with make check TESTS=''.
 am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
 am--force-recheck:
 	@:
